{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","App","state","user","username","password","error","newprayer","prayerlist","componentDidMount","onAuthStateChanged","userAuth","console","log","uid","setState","collection","doc","onSnapshot","snapshot","docChanges","forEach","change","type","data","onChangeHandlerUsername","event","currentTarget","value","onChangeHandlerPassword","signInHandler","preventDefault","signInWithEmailAndPassword","catch","signOutHandler","signOut","window","location","reload","newPrayerHandler","prayer","innerHTML","addPrayer","message","dateNow","Date","now","userId","docRef","add","author","email","date","recurring","then","id","item","push","this","onSubmit","required","onChange","className","onClick","contentEditable","onInput","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd3964fa.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n const firebaseConfig = {\r\n\t\tapiKey: \"AIzaSyAE2tUZXM3GPw9Jjy3G5y4Fp7MINMaO-j8\",\r\n\t\tauthDomain: \"pray-290920.firebaseapp.com\",\r\n\t\tdatabaseURL: \"https://pray-290920.firebaseio.com\",\r\n\t\tprojectId: \"pray-290920\",\r\n\t\tstorageBucket: \"pray-290920.appspot.com\",\r\n\t\tmessagingSenderId: \"951976358196\",\r\n\t\tappId: \"1:951976358196:web:4686903027ee94f7ea3561\",\r\n\t\tmeasurementId: \"G-TRF9JGHQCR\"\r\n\t  };\r\n\t  \r\n\t \r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();","import React, { Component, createContext, } from \"react\";\nimport {auth, db} from \"./firebase\";\nimport \"./App.css\";\n\nexport const UserContext = createContext({ user: null });\n\nclass App extends Component {\n\t\n   state = {\n\t user: null,\n     username: null,\n\t password: null,\n\t error: null,\n\t newprayer: null,\n\t prayerlist: []\n   };\n   componentDidMount = () => {\n   \n\t auth.onAuthStateChanged(userAuth => {\n\t\tif (userAuth!=null){\n      \t  console.log(userAuth.uid);\n\t\t  this.setState({user: userAuth});\t\n\t\t  \n\t\t  db.collection(\"rooms\").doc(\"prayer\").collection(\"private\").doc(this.state.user.uid).collection(\"messages\")\n\t\t  .onSnapshot(function(snapshot) {\n\t\t\t\tsnapshot.docChanges().forEach(function(change) {\n\t\t\t\t\tif (change.type === \"added\") {\n\t\t\t\t\t\tconsole.log(\"New prayer: \", change.doc.data());\n\t\t\t\t\t}\n\t\t\t\t\tif (change.type === \"modified\") {\n\t\t\t\t\t\tconsole.log(\"Modified prayer: \", change.doc.data());\n\t\t\t\t\t}\n\t\t\t\t\tif (change.type === \"removed\") {\n\t\t\t\t\t\tconsole.log(\"Removed prayer: \", change.doc.data());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\n\t\t}\t\t  \n     });\n\n\n   };\n  \n   onChangeHandlerUsername = (event) => {\n          //console.log(event.currentTarget.innerHTML);\n\t\t  var username = event.currentTarget.value;\n\t\t  this.setState({username: username});\t\t  \n    };\n \n   onChangeHandlerPassword = (event) => {\n          //console.log(event.currentTarget.innerHTML);\n\t\t  var password = event.currentTarget.value;\n\t\t  console.log(\"password: \", password);\n\t\t  this.setState({password: password});\n\t\t  \n\t\t  \n    };\n\t\n   signInHandler = (event) => {\n\t   event.preventDefault();\n\t  auth.signInWithEmailAndPassword(this.state.username, this.state.password).catch(error => {\n      console.log(\"Error signing in with password and email\", error);\n\t  this.setState({error: error});\n\t  }); \n\n   }\n   \n   signOutHandler = (event) => {\n\t  auth.signOut();\n\t  this.setState({user: null});\n\t  window.location.reload(false);\n   }\n\n    newPrayerHandler = (event) => {\n          //console.log(event.currentTarget.innerHTML);\n\t\t  var prayer = \"Dear heavenly Father, \" +  event.currentTarget.innerHTML + \", in Jesus' name, Amen\";\n\t\t  this.setState({newprayer: prayer});\n    };\n\t\n\taddPrayer = (event) => {\n\t\tconsole.log(\"add: \" + this.state.newprayer);\n\t\tvar message = this.state.newprayer;\n\t\tvar dateNow = Date.now();\n\t\tconsole.log(\"useruid: \" + this.state.user.uid);\n\t\tvar userId = this.state.user.uid;\n\t\tvar prayerlist = this.state.prayerlist;\n\t     var docRef = db.collection(\"rooms\").doc(\"prayer\").collection(\"private\").doc(userId).collection(\"messages\");\n\t    docRef.add({\n              author: this.state.user.email,\n\t\t\t  userId: userId,\n\t\t\t  message: message,\n\t\t\t  date: dateNow,\n\t\t\t  recurring: false\n\n\t\t\t}) \n\t\t\t.then(function(doc) {\n\t\t\t\t//alert(\"Document written with ID: \" + doc.id);\n\t\t\t\t\t\t  console.log(docRef, message, \"private\", dateNow, userId, doc.id, false);\n\t\t\t\t\t\t  var item = {\"docRef\": docRef, \"message\": message, \"messageType\": \"private\", \"date\": dateNow, \"id\": doc.id, \"recurring\": false};\n\t\t\t\t\t\t  prayerlist.push(item);\n\t\t\t\t\t      \n\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.error(\"Error adding document: \", error);\n\t\t\t\t\t\t\t\t\t\t  //alert(\"error\");\n\n\t\t\t});\n\t\t//this.setState({prayerlist: prayerlist});\n\n\t    //console.log(this.state.prayerlist.length);\n\n\t\t \n\t}\n\t\n   render() {\n\tif (this.state.user===null){   \n\t\treturn (\n\t\t<div>\n\t\t    <form onSubmit={this.signInHandler}>\n\t\t\t <div>Username</div>\n\t\t\t   <div><input required type=\"email\" onChange = {(event) => this.onChangeHandlerUsername(event)}></input></div>\n\t\t\t <div>Password</div>\n\t\t\t   <input type=\"password\" required onChange = {(event) => this.onChangeHandlerPassword(event)}></input>\n\t\t\t <div> \n\t\t\t    <input type=\"submit\" value=\"Sign in\"/>\n\t\t     </div>\t\t\n\t\t\t </form>\n\t\t\t \n\t\t\t \n\n\t\t </div>\n\t\t);\n\t}else{\n\t\treturn (\n\t\t<div>\n\t\t     <div className=\"button\" onClick = {(event) => {this.signOutHandler(event)}}>Sign out </div>\n\t\t\t <div>\n\t\t\t       <h1>New prayer</h1>\n\t\t\t\t   <div>Dear heavenly Father, </div>\n\t\t\t\t   <div contentEditable onInput = {(event) => this.newPrayerHandler(event)}></div>\n\t\t\t\t   <div>in Jesus' name, Amen.</div>\n\t\t\t\t   <button  onClick = {(event) => {this.addPrayer(event)}}>\n\t\t\t\t\t\tSend\n\t\t\t\t   </button>\n\t\t\t </div>\n\t\t\t <div>\n\t\t\t    \n\t\t\t </div>\n\t\t</div>\n\t\t);\n\t}\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}