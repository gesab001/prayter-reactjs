{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","App","firestore","state","user","username","password","componentDidMount","onAuthStateChanged","userAuth","console","log","uid","setState","onChangeHandlerUsername","event","currentTarget","value","onChangeHandlerPassword","signInHandler","signInWithEmailAndPassword","catch","error","signOutHandler","signOut","window","location","reload","this","type","onChange","className","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2PAgBAA,IAASC,cAZe,CACtBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKV,IAAMC,EAAOV,IAASU,OCuDdC,GDtDUX,IAASY,Y,kNCV/BC,MAAQ,CACTC,KAAM,KACHC,SAAU,KACbC,SAAU,M,EAETC,kBAAoB,WAErBP,EAAKQ,oBAAmB,SAAAC,GACL,MAAVA,IACRC,QAAQC,IAAIF,EAASG,KACpB,EAAKC,SAAS,CAACT,KAAMK,EAASG,W,EAK/BE,wBAA0B,SAACC,GAE1B,IAAIV,EAAWU,EAAMC,cAAcC,MACnC,EAAKJ,SAAS,CAACR,SAAUA,K,EAG1Ba,wBAA0B,SAACH,GAE1B,IAAIT,EAAWS,EAAMC,cAAcC,MACnCP,QAAQC,IAAI,aAAcL,GAC1B,EAAKO,SAAS,CAACP,SAAUA,K,EAK1Ba,cAAgB,SAACJ,GACjBf,EAAKoB,2BAA2B,EAAKjB,MAAME,SAAU,EAAKF,MAAMG,UAAUe,OAAM,SAAAC,GAC7EZ,QAAQC,IAAI,2CAA4CW,O,EAI3DC,eAAiB,SAACR,GAClBf,EAAKwB,UACL,EAAKX,SAAS,CAACT,KAAM,OACrBqB,OAAOC,SAASC,QAAO,I,uDAGb,IAAD,OACX,OAAsB,OAAlBC,KAAKzB,MAAMC,KAEd,gCACE,2CACE,uBAAOyB,KAAK,QAASC,SAAY,SAACf,GAAD,OAAW,EAAKD,wBAAwBC,MAC3E,2CACE,uBAAOc,KAAK,WAAYC,SAAY,SAACf,GAAD,OAAW,EAAKG,wBAAwBH,MAC9E,qBAAKgB,UAAU,SAASC,QAAW,SAACjB,GAAW,EAAKI,cAAcJ,IAAlE,yBASF,qBAAKgB,UAAU,SAASC,QAAW,SAACjB,GAAW,EAAKQ,eAAeR,IAAnE,2B,GA7DgBkB,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a2cdbcac.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n const firebaseConfig = {\r\n\t\tapiKey: \"AIzaSyAE2tUZXM3GPw9Jjy3G5y4Fp7MINMaO-j8\",\r\n\t\tauthDomain: \"pray-290920.firebaseapp.com\",\r\n\t\tdatabaseURL: \"https://pray-290920.firebaseio.com\",\r\n\t\tprojectId: \"pray-290920\",\r\n\t\tstorageBucket: \"pray-290920.appspot.com\",\r\n\t\tmessagingSenderId: \"951976358196\",\r\n\t\tappId: \"1:951976358196:web:4686903027ee94f7ea3561\",\r\n\t\tmeasurementId: \"G-TRF9JGHQCR\"\r\n\t  };\r\n\t  \r\n\t \r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();","import React, { Component, createContext, } from \"react\";\nimport {auth} from \"./firebase\";\nimport \"./App.css\";\n\nexport const UserContext = createContext({ user: null });\n\nclass App extends Component {\n\t\n   state = {\n\t user: null,\n     username: null,\n\t password: null\n   };\n   componentDidMount = () => {\n   \n\t auth.onAuthStateChanged(userAuth => {\n      \tif (userAuth!=null) {\n\t\t\tconsole.log(userAuth.uid);\n\t\t  this.setState({user: userAuth.uid});\n\t\t}\t\t  \n     });\n   };\n  \n   onChangeHandlerUsername = (event) => {\n          //console.log(event.currentTarget.innerHTML);\n\t\t  var username = event.currentTarget.value;\n\t\t  this.setState({username: username});\t\t  \n    };\n \n   onChangeHandlerPassword = (event) => {\n          //console.log(event.currentTarget.innerHTML);\n\t\t  var password = event.currentTarget.value;\n\t\t  console.log(\"password: \", password);\n\t\t  this.setState({password: password});\n\t\t  \n\t\t  \n    };\n\t\n   signInHandler = (event) => {\n\t  auth.signInWithEmailAndPassword(this.state.username, this.state.password).catch(error => {\n      console.log(\"Error signing in with password and email\", error);\n\t  });\n   }\n   \n   signOutHandler = (event) => {\n\t  auth.signOut();\n\t  this.setState({user: null});\n\t  window.location.reload(false);\n   }\n\t\n   render() {\n\tif (this.state.user===null){   \n\t\treturn (\n\t\t<div>\n\t\t\t <div>Username</div>\n\t\t\t   <input type=\"email\"  onChange = {(event) => this.onChangeHandlerUsername(event)}></input>\n\t\t\t <div>Password</div>\n\t\t\t   <input type=\"password\"  onChange = {(event) => this.onChangeHandlerPassword(event)}></input>\n\t\t\t <div className=\"button\" onClick = {(event) => {this.signInHandler(event)}}>Sign in </div>\n\t\t\t \n\t\t\t \n\t\t\t \n\n\t\t </div>\n\t\t);\n\t}else{\n\t\treturn (\n\t\t<div className=\"button\" onClick = {(event) => {this.signOutHandler(event)}}>Sign out </div>\n\t\t);\n\t}\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}