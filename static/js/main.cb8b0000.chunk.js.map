{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","App","props","componentDidMount","onAuthStateChanged","userAuth","console","log","uid","setState","user","unsubscribe","collection","doc","state","orderBy","limit","onSnapshot","onDataChange","onChangeHandlerUsername","event","username","currentTarget","value","onChangeHandlerPassword","password","signInHandler","preventDefault","signInWithEmailAndPassword","catch","error","signOutHandler","signOut","window","location","reload","newPrayerHandler","prayer","innerHTML","newprayer","addPrayer","message","dateNow","Date","now","userId","docRef","add","author","email","date","recurring","then","id","bind","prayerlist","undefined","this","snapshot","items","docChanges","forEach","change","type","data","unshift","onSubmit","required","onChange","className","onClick","contentEditable","onInput","viewPrayer","map","index","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb8b0000.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n const firebaseConfig = {\r\n\t\tapiKey: \"AIzaSyAE2tUZXM3GPw9Jjy3G5y4Fp7MINMaO-j8\",\r\n\t\tauthDomain: \"pray-290920.firebaseapp.com\",\r\n\t\tdatabaseURL: \"https://pray-290920.firebaseio.com\",\r\n\t\tprojectId: \"pray-290920\",\r\n\t\tstorageBucket: \"pray-290920.appspot.com\",\r\n\t\tmessagingSenderId: \"951976358196\",\r\n\t\tappId: \"1:951976358196:web:4686903027ee94f7ea3561\",\r\n\t\tmeasurementId: \"G-TRF9JGHQCR\"\r\n\t  };\r\n\t  \r\n\t \r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();","import React, { Component, createContext, } from \"react\";\nimport {auth, db} from \"./firebase\";\nimport \"./App.css\";\n\nexport const UserContext = createContext({ user: null });\n\n\n  \t \nclass App extends Component {\n\t\n constructor(props) {\n    super(props);\n    this.onDataChange = this.onDataChange.bind(this);\n\n    this.state = {\n     user: null,\n     username: null,\n\t password: null,\n\t error: null,\n\t newprayer: null,\n\t prayerlist: []\n    };\n\n    this.unsubscribe = undefined;\n  }\n\n   componentDidMount = () => {\n\n\t auth.onAuthStateChanged(userAuth => {\n\t\tif (userAuth!=null){\n      \t  console.log(userAuth.uid);\n\t\t  this.setState({user: userAuth});\t\n          this.unsubscribe = db.collection(\"rooms\").doc(\"prayer\").collection(\"private\").doc(this.state.user.uid).collection(\"messages\").orderBy(\"date\", \"desc\").limit(3)\n\t\t  .onSnapshot(this.onDataChange);\n\t\t\t\n\t\n\t\t}\t\t  \n     });\n\n   };\n\n   componentWillUnmount() {\n     this.unsubscribe();\n   }\n   \n   onDataChange(snapshot){\n\t   let items = this.state.prayerlist;\n\t   snapshot.docChanges().forEach(function(change) {\n\t\t\t\t\tif (change.type === \"added\") {\n\t\t\t\t\t\tconsole.log(\"New prayer: \", change.doc.data());\t\n\t\t\t\t\t\titems.unshift(change.doc.data());\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tif (change.type === \"modified\") {\n\t\t\t\t\t\tconsole.log(\"Modified prayer: \", change.doc.data());\n\t\t\t\t\t}\n\t\t\t\t\tif (change.type === \"removed\") {\n\t\t\t\t\t\tconsole.log(\"Removed prayer: \", change.doc.data());\n\t\t\t\t\t}\n\t\t\t\t});\n\t    this.setState({prayerlist: items});\n   }\n /*  db.collection(\"rooms\").doc(\"prayer\").collection(\"private\").doc(this.state.user.uid).collection(\"messages\").orderBy(\"date\", \"desc\").limit(3)\n\t\t  .onSnapshot(function(snapshot) {\n\t\t\t    var list = []\n\t\t\t\tsnapshot.docChanges().forEach(function(change) {\n\t\t\t\t\tif (change.type === \"added\") {\n\t\t\t\t\t\tconsole.log(\"New prayer: \", change.doc.data());\n\t\t\t\t\t\tlist.push(change.doc.data());\n\t\t\t\t\t}\n\t\t\t\t\tif (change.type === \"modified\") {\n\t\t\t\t\t\tconsole.log(\"Modified prayer: \", change.doc.data());\n\t\t\t\t\t}\n\t\t\t\t\tif (change.type === \"removed\") {\n\t\t\t\t\t\tconsole.log(\"Removed prayer: \", change.doc.data());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}); */\n   viewPrayer (userId) {\n \n\t\t db.collection(\"rooms\").doc(\"prayer\").collection(\"private\").doc(userId).collection(\"messages\").orderBy(\"date\", \"desc\").limit(3)\n\t\t  .onSnapshot(function(snapshot) {\n\t\n\t\t\t\tsnapshot.docChanges().forEach(function(change) {\n\t\t\t\t\tif (change.type === \"added\") {\n\t\t\t\t\t\tconsole.log(\"New prayer: \", change.doc.data());\n\t\t\t\t\t}\n\t\t\t\t\tif (change.type === \"modified\") {\n\t\t\t\t\t\tconsole.log(\"Modified prayer: \", change.doc.data());\n\t\t\t\t\t}\n\t\t\t\t\tif (change.type === \"removed\") {\n\t\t\t\t\t\tconsole.log(\"Removed prayer: \", change.doc.data());\n\t\t\t\t\t}\n\t\t\t\t});\n\n\n\t\t\t});\n\n\n\n   }\n   \n   onChangeHandlerUsername = (event) => {\n          //console.log(event.currentTarget.innerHTML);\n\t\t  var username = event.currentTarget.value;\n\t\t  this.setState({username: username});\t\t  \n    };\n \n   onChangeHandlerPassword = (event) => {\n          //console.log(event.currentTarget.innerHTML);\n\t\t  var password = event.currentTarget.value;\n\t\t  console.log(\"password: \", password);\n\t\t  this.setState({password: password});\n\t\t  \n\t\t  \n    };\n\t\n   signInHandler = (event) => {\n\t   event.preventDefault();\n\t  auth.signInWithEmailAndPassword(this.state.username, this.state.password).catch(error => {\n      console.log(\"Error signing in with password and email\", error);\n\t  this.setState({error: error});\n\t  }); \n\n   }\n   \n   signOutHandler = (event) => {\n\t  auth.signOut();\n\t  this.setState({user: null});\n\t  window.location.reload(false);\n   }\n\n    newPrayerHandler = (event) => {\n          //console.log(event.currentTarget.innerHTML);\n\t\t  var prayer = \"Dear heavenly Father, \" +  event.currentTarget.innerHTML + \", in Jesus' name, Amen\";\n\t\t  this.setState({newprayer: prayer});\n    };\n\t\n\taddPrayer = (event) => {\n\t\tconsole.log(\"add: \" + this.state.newprayer);\n\t\tvar message = this.state.newprayer;\n\t\tvar dateNow = Date.now();\n\t\tconsole.log(\"useruid: \" + this.state.user.uid);\n\t\tvar userId = this.state.user.uid;\n\t\t//var prayerlist = this.state.prayerlist;\n\t     var docRef = db.collection(\"rooms\").doc(\"prayer\").collection(\"private\").doc(userId).collection(\"messages\");\n\t    docRef.add({\n              author: this.state.user.email,\n\t\t\t  userId: userId,\n\t\t\t  message: message,\n\t\t\t  date: dateNow,\n\t\t\t  recurring: false\n\n\t\t\t}) \n\t\t\t.then(function(doc) {\n\t\t\t\t//alert(\"Document written with ID: \" + doc.id);\n\t\t\t\t\t\t  console.log(docRef, message, \"private\", dateNow, userId, doc.id, false);\n\t\t\t\t\t\t//  var item = {\"docRef\": docRef, \"message\": message, \"messageType\": \"private\", \"date\": dateNow, \"id\": doc.id, \"recurring\": false};\n\t\t\t\t\t\t//  prayerlist.push(item);\n\t\t\t\t\t      \n\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.error(\"Error adding document: \", error);\n\t\t\t\t\t\t\t\t\t\t  //alert(\"error\");\n\n\t\t\t});\n\t\t//this.setState({prayerlist: prayerlist});\n\n\t    //console.log(this.state.prayerlist.length);\n\n\t\t \n\t}\n\t\n   render() {\n\n\tif (this.state.user===null){   \n\t\treturn (\n\t\t<div>\n\t\t    <form onSubmit={this.signInHandler}>\n\t\t\t <div>Username</div>\n\t\t\t   <div><input required type=\"email\" onChange = {(event) => this.onChangeHandlerUsername(event)}></input></div>\n\t\t\t <div>Password</div>\n\t\t\t   <input type=\"password\" required onChange = {(event) => this.onChangeHandlerPassword(event)}></input>\n\t\t\t <div> \n\t\t\t    <input type=\"submit\" value=\"Sign in\"/>\n\t\t     </div>\t\t\n\t\t\t </form>\n\t\t\t \n\t\t\t \n\n\t\t </div>\n\t\t);\n\t}else{\n        const { prayerlist} = this.state;\n\n\t\treturn (\n\t\t<div>\n\t\t     <div className=\"button\" onClick = {(event) => {this.signOutHandler(event)}}>Sign out </div>\n\t\t\t <div>\n\t\t\t       <h1>New prayer</h1>\n\t\t\t\t   <div>Dear heavenly Father, </div>\n\t\t\t\t   <div contentEditable onInput = {(event) => this.newPrayerHandler(event)}></div>\n\t\t\t\t   <div>in Jesus' name, Amen.</div>\n\t\t\t\t   <button  onClick = {(event) => {this.addPrayer(event)}}>\n\t\t\t\t\t\tSend\n\t\t\t\t   </button>\n\t\t\t\t   <button  onClick = {(event) => {this.viewPrayer(this.state.user.uid)}}>\n\t\t\t\t\t\tView prayers\n\t\t\t\t   </button>\n\t\t\t </div>\n\t\t\t <div>\n\t\t\t     <ul className=\"list-group\">\n\t\t\t\t\t{prayerlist &&\n\t\t\t\t\t  prayerlist.map((prayer, index) => (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t  {prayer.message}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t  ))}\n\t\t\t\t  </ul>\n\t\t\t </div>\n\t\t</div>\n\t\t);\n\t}\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}